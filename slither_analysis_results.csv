/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol,Vulnerabilities found:,"'solc --version' running
'solc /Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control' running
Compilation warnings/errors on /Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:83:42: Warning: ""throw"" is deprecated in favour of ""revert()"", ""require()"" and ""assert()"".
                 if (collectedFees == 0) throw;
                                         ^---^
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:93:42: Warning: ""throw"" is deprecated in favour of ""revert()"", ""require()"" and ""assert()"".
                 if (collectedFees == 0) throw;
                                         ^---^
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:100:58: Warning: ""throw"" is deprecated in favour of ""revert()"", ""require()"" and ""assert()"".
                 if (collectedFees == 0 || _pcent > 100) throw;
                                                         ^---^
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:113:50: Warning: ""throw"" is deprecated in favour of ""revert()"", ""require()"" and ""assert()"".
                 if (_mult > 300 || _mult < 120) throw;
                                                 ^---^
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:119:33: Warning: ""throw"" is deprecated in favour of ""revert()"", ""require()"" and ""assert()"".
                 if (_fee > 10) throw;
                                ^---^
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:74:26: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                         participants[payoutOrder].etherAddress.send(payoutToSend);
                         ^-------------------------------------------------------^
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:85:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(collectedFees);
                 ^-------------------------^
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:95:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(_amt);
                 ^----------------^
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol:103:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(feesToCollect);
                 ^-------------------------^

INFO:Detectors:
Rubixi (smartbugs-curated-main/dataset/access_control/rubixi.sol#10-162) contract sets array length with a user-controlled value:
	- participants.push(Participant(msg.sender,(msg.value * pyramidMultiplier) / 100)) (smartbugs-curated-main/dataset/access_control/rubixi.sol#61)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment
INFO:Detectors:
Rubixi.collectPercentOfFees(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#99-105) performs a multiplication on the result of a division:
	- feesToCollect = collectedFees / 100 * _pcent (smartbugs-curated-main/dataset/access_control/rubixi.sol#102)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
Rubixi.addPayout(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#59-79) ignores return value by participants[payoutOrder].etherAddress.send(payoutToSend) (smartbugs-curated-main/dataset/access_control/rubixi.sol#74)
Rubixi.collectAllFees() (smartbugs-curated-main/dataset/access_control/rubixi.sol#82-87) ignores return value by creator.send(collectedFees) (smartbugs-curated-main/dataset/access_control/rubixi.sol#85)
Rubixi.collectFeesInEther(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#89-97) ignores return value by creator.send(_amt) (smartbugs-curated-main/dataset/access_control/rubixi.sol#95)
Rubixi.collectPercentOfFees(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#99-105) ignores return value by creator.send(feesToCollect) (smartbugs-curated-main/dataset/access_control/rubixi.sol#103)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send
INFO:Detectors:
Rubixi.changeOwner(address) (smartbugs-curated-main/dataset/access_control/rubixi.sol#108-110) should emit an event for: 
	- creator = _owner (smartbugs-curated-main/dataset/access_control/rubixi.sol#109) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
Rubixi.collectFeesInEther(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#89-97) should emit an event for: 
	- collectedFees -= _amt (smartbugs-curated-main/dataset/access_control/rubixi.sol#96) 
Rubixi.collectPercentOfFees(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#99-105) should emit an event for: 
	- collectedFees -= feesToCollect (smartbugs-curated-main/dataset/access_control/rubixi.sol#104) 
Rubixi.changeMultiplier(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#112-116) should emit an event for: 
	- pyramidMultiplier = _mult (smartbugs-curated-main/dataset/access_control/rubixi.sol#115) 
Rubixi.changeFeePercentage(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#118-122) should emit an event for: 
	- feePercent = _fee (smartbugs-curated-main/dataset/access_control/rubixi.sol#121) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Rubixi.changeOwner(address)._owner (smartbugs-curated-main/dataset/access_control/rubixi.sol#108) lacks a zero-check on :
		- creator = _owner (smartbugs-curated-main/dataset/access_control/rubixi.sol#109)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Modifier Rubixi.onlyowner() (smartbugs-curated-main/dataset/access_control/rubixi.sol#27-29) does not always execute _; or revert
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier
INFO:Detectors:
Rubixi.addPayout(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#59-79) has external calls inside a loop: participants[payoutOrder].etherAddress.send(payoutToSend) (smartbugs-curated-main/dataset/access_control/rubixi.sol#74)
	Calls stack containing the loop:
		Rubixi.fallback()
		Rubixi.init()
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Deprecated standard detected THROW (smartbugs-curated-main/dataset/access_control/rubixi.sol#83):
	- Usage of ""throw"" should be replaced with ""revert()""
Deprecated standard detected THROW (smartbugs-curated-main/dataset/access_control/rubixi.sol#93):
	- Usage of ""throw"" should be replaced with ""revert()""
Deprecated standard detected THROW (smartbugs-curated-main/dataset/access_control/rubixi.sol#100):
	- Usage of ""throw"" should be replaced with ""revert()""
Deprecated standard detected THROW (smartbugs-curated-main/dataset/access_control/rubixi.sol#113):
	- Usage of ""throw"" should be replaced with ""revert()""
Deprecated standard detected THROW (smartbugs-curated-main/dataset/access_control/rubixi.sol#119):
	- Usage of ""throw"" should be replaced with ""revert()""
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards
INFO:Detectors:
Version constraint ^0.4.15 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector.
It is used by:
	- ^0.4.15 (smartbugs-curated-main/dataset/access_control/rubixi.sol#8)
solc-0.4.15 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function Rubixi.DynamicPyramid() (smartbugs-curated-main/dataset/access_control/rubixi.sol#23-25) is not in mixedCase
Parameter Rubixi.addPayout(uint256)._fee (smartbugs-curated-main/dataset/access_control/rubixi.sol#59) is not in mixedCase
Parameter Rubixi.collectFeesInEther(uint256)._amt (smartbugs-curated-main/dataset/access_control/rubixi.sol#89) is not in mixedCase
Parameter Rubixi.collectPercentOfFees(uint256)._pcent (smartbugs-curated-main/dataset/access_control/rubixi.sol#99) is not in mixedCase
Parameter Rubixi.changeOwner(address)._owner (smartbugs-curated-main/dataset/access_control/rubixi.sol#108) is not in mixedCase
Parameter Rubixi.changeMultiplier(uint256)._mult (smartbugs-curated-main/dataset/access_control/rubixi.sol#112) is not in mixedCase
Parameter Rubixi.changeFeePercentage(uint256)._fee (smartbugs-curated-main/dataset/access_control/rubixi.sol#118) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Reentrancy in Rubixi.addPayout(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#59-79):
	External calls:
	- participants[payoutOrder].etherAddress.send(payoutToSend) (smartbugs-curated-main/dataset/access_control/rubixi.sol#74)
	State variables written after the call(s):
	- balance -= participants[payoutOrder].payout (smartbugs-curated-main/dataset/access_control/rubixi.sol#76)
	- payoutOrder += 1 (smartbugs-curated-main/dataset/access_control/rubixi.sol#77)
Reentrancy in Rubixi.collectAllFees() (smartbugs-curated-main/dataset/access_control/rubixi.sol#82-87):
	External calls:
	- creator.send(collectedFees) (smartbugs-curated-main/dataset/access_control/rubixi.sol#85)
	State variables written after the call(s):
	- collectedFees = 0 (smartbugs-curated-main/dataset/access_control/rubixi.sol#86)
Reentrancy in Rubixi.collectFeesInEther(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#89-97):
	External calls:
	- collectAllFees() (smartbugs-curated-main/dataset/access_control/rubixi.sol#91)
		- creator.send(collectedFees) (smartbugs-curated-main/dataset/access_control/rubixi.sol#85)
	- creator.send(_amt) (smartbugs-curated-main/dataset/access_control/rubixi.sol#95)
	State variables written after the call(s):
	- collectedFees -= _amt (smartbugs-curated-main/dataset/access_control/rubixi.sol#96)
Reentrancy in Rubixi.collectPercentOfFees(uint256) (smartbugs-curated-main/dataset/access_control/rubixi.sol#99-105):
	External calls:
	- creator.send(feesToCollect) (smartbugs-curated-main/dataset/access_control/rubixi.sol#103)
	State variables written after the call(s):
	- collectedFees -= feesToCollect (smartbugs-curated-main/dataset/access_control/rubixi.sol#104)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Slither:/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/rubixi.sol analyzed (1 contracts with 100 detectors), 32 result(s) found"
/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol,Vulnerabilities found:,"'solc --version' running
'solc /Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control' running
INFO:Detectors:
Wallet (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#9-40) contract sets array length with a user-controlled value:
	- bonusCodes.push(c) (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment
INFO:Detectors:
Wallet.PopBonusCode() (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#25-29) contains a tautology or contradiction:
	- require(bool)(0 <= bonusCodes.length) (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction
INFO:Detectors:
Version constraint ^0.4.25 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x.
It is used by:
	- ^0.4.25 (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#7)
solc-0.4.25 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function Wallet.PushBonusCode(uint256) (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#21-23) is not in mixedCase
Function Wallet.PopBonusCode() (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#25-29) is not in mixedCase
Function Wallet.UpdateBonusCodeAt(uint256,uint256) (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#31-34) is not in mixedCase
Function Wallet.Destroy() (smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol#36-39) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:/Users/franciscosilva/Desktop/MEI/Repo/smartbugs-curated-main/dataset/access_control/arbitrary_location_write_simple.sol analyzed (1 contracts with 100 detectors), 8 result(s) found"
